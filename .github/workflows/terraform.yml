name: Deploy Terraform
run-name: Deploy ${{ inputs.project }} with ${{ inputs.resource }} resource(s)

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Which project are we deploying?'
        required: true
        type: choice
        options:
          - nicoxmcdportfolio
      dry_run:
        description: 'True for PLAN ONLY'
        required: true
        default: true
        type: boolean

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  Terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform/${{ inputs.project }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.0 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ROLE_DEPLOY }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Import
      run: |
        terraform import aws_s3_bucket.portfolio nicoxmcdportfolio
        terraform import aws_route53_zone.main Z06077682QPQ47SHNGLDN
        terraform import aws_route53_record.www_a "Z06077682QPQ47SHNGLDN_www.nicoxmcd.com._A"
        terraform import aws_route53_record.apex_redirect "Z06077682QPQ47SHNGLDN_nicoxmcd.com._A"
        terraform import aws_acm_certificate.cert arn:aws:acm:us-east-1:886436941448:certificate/6d2bdc4e-7009-4fd4-a7e8-f4761565114f
        terraform import aws_cloudfront_distribution.cdn E2XW953XY0MSBC

    - name: Terraform Plan
      run: |
        terraform plan


    - name: Terraform Apply
      if: ${{ inputs.dry_run == false }}
      run: |
        terraform apply -auto-approve
    
    - name: Invalidate CloudFront Cache
      if: ${{ inputs.dry_run == false }}
      run: |
        aws cloudfront create-invalidation \
          --distribution-id E2XW953XY0MSBC \
          --paths "/*"
